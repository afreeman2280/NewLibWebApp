@model NewLibWebApp.Models.UserViewModel
@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

@using (Html.BeginForm("Login", "User", FormMethod.Post))
{
    <div class="DivTextBoxPosition">

        <span>@ViewBag.LoginError</span>

        <div>
            @Html.LabelFor(m => m.SingleUser.UserName)
            @Html.TextBoxFor(m => m.SingleUser.UserName, new { @class = "TextBoxPosition" })
            @Html.ValidationMessageFor(m => m.SingleUser.UserName)
        </div>
        <div>
            @Html.LabelFor(m => m.SingleUser.password)
           @Html.PasswordFor(m => m.SingleUser.password, new { @class = "form-control",@Id="id_password" })
            <i class="far fa-eye" id="togglePassword" onclick="showPassword()"></i>

        </div>

        <input type="Submit" value="Submit" />
    </div>

}
<script>
    const togglePassword = document.querySelector('#togglePassword');
    const password = document.querySelector('#id_password');

    togglePassword.addEventListener('click', function (e) {
        // toggle the type attribute
        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);
        // toggle the eye slash icon
        this.classList.toggle('fa-eye-slash');
    });
</script>